version: 2
jobs:
  build:
    working_directory: /go/src/github.com/Mongey/ksql
    docker:
      - image: circleci/golang:1.11
        environment:
          GO111MODULE: 'on'
      - image: confluentinc/cp-zookeeper:5.1.0
        environment:
          ZOOKEEPER_CLIENT_PORT: 2181
          ZOOKEEPER_TICK_TIME: 2000
      - image: confluentinc/cp-kafka:5.1.0
        environment:
          KAFKA_BROKER_ID: 1
          KAFKA_ZOOKEEPER_CONNECT: localhost:2181
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
          KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM:
          KAFKA_LISTENER_NAME_INTERNAL_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM:
      - image: confluentinc/cp-schema-registry:5.1.0
        environment:
          SCHEMA_REGISTRY_HOST_NAME: localhost
          SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: localhost:2181
      - image: confluentinc/ksql-cli:5.1.0
        environment:
          KSQL_CONFIG_DIR: "/etc/ksql"
          KSQL_OPTS: "-Dbootstrap.servers=localhost:9092 -Dksql.schema.registry.url=http://localhost:8081 -Dlisteners=http://0.0.0.0:8088"
          KSQL_LOG4J_OPTS: "-Dlog4j.configuration=file:/etc/ksql/log4j-rolling.properties"
        command: "bash -c 'echo Waiting for Kafka to be ready... && \
                  cub kafka-ready -b localhost:9092 1 80 && \
                  echo Waiting a few seconds for topic creation to finish... && \
                  sleep 2 && \
                  /usr/bin/ksql-server-start /etc/ksql/ksql-server.properties'"
    steps:
      - checkout
      - run:
          name: Wait For KSQL
          command: |
            echo "Waiting ksql to launch on 8088..."
            while ! nc -z localhost 8088; do
              sleep 1
            done
            echo "ksql launched"
      - run:
          name: Run Tests
          command: go test $(go list ./... |grep -v 'vendor') -v -timeout 120m
